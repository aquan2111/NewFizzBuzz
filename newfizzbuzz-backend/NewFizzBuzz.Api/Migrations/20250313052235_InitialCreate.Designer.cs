// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewFizzBuzz.Api.Data;

#nullable disable

namespace NewFizzBuzz.Api.Migrations
{
    [DbContext(typeof(NewFizzBuzzDbContext))]
    [Migration("20250313052235_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Attempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttemptedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Attempts");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.AttemptAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AttemptId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuizQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttemptId");

                    b.HasIndex("QuizQuestionId");

                    b.ToTable("AttemptAnswers");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.QuizQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuizQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            Number = 4
                        },
                        new
                        {
                            Id = 5,
                            Number = 5
                        },
                        new
                        {
                            Id = 6,
                            Number = 6
                        },
                        new
                        {
                            Id = 7,
                            Number = 7
                        },
                        new
                        {
                            Id = 8,
                            Number = 8
                        },
                        new
                        {
                            Id = 9,
                            Number = 9
                        },
                        new
                        {
                            Id = 10,
                            Number = 10
                        },
                        new
                        {
                            Id = 11,
                            Number = 11
                        },
                        new
                        {
                            Id = 12,
                            Number = 12
                        },
                        new
                        {
                            Id = 13,
                            Number = 13
                        },
                        new
                        {
                            Id = 14,
                            Number = 14
                        },
                        new
                        {
                            Id = 15,
                            Number = 15
                        },
                        new
                        {
                            Id = 16,
                            Number = 16
                        },
                        new
                        {
                            Id = 17,
                            Number = 17
                        },
                        new
                        {
                            Id = 18,
                            Number = 18
                        },
                        new
                        {
                            Id = 19,
                            Number = 19
                        },
                        new
                        {
                            Id = 20,
                            Number = 20
                        },
                        new
                        {
                            Id = 21,
                            Number = 21
                        },
                        new
                        {
                            Id = 22,
                            Number = 22
                        },
                        new
                        {
                            Id = 23,
                            Number = 23
                        },
                        new
                        {
                            Id = 24,
                            Number = 24
                        },
                        new
                        {
                            Id = 25,
                            Number = 25
                        },
                        new
                        {
                            Id = 26,
                            Number = 26
                        },
                        new
                        {
                            Id = 27,
                            Number = 27
                        },
                        new
                        {
                            Id = 28,
                            Number = 28
                        },
                        new
                        {
                            Id = 29,
                            Number = 29
                        },
                        new
                        {
                            Id = 30,
                            Number = 30
                        },
                        new
                        {
                            Id = 31,
                            Number = 31
                        },
                        new
                        {
                            Id = 32,
                            Number = 32
                        },
                        new
                        {
                            Id = 33,
                            Number = 33
                        },
                        new
                        {
                            Id = 34,
                            Number = 34
                        },
                        new
                        {
                            Id = 35,
                            Number = 35
                        },
                        new
                        {
                            Id = 36,
                            Number = 36
                        },
                        new
                        {
                            Id = 37,
                            Number = 37
                        },
                        new
                        {
                            Id = 38,
                            Number = 38
                        },
                        new
                        {
                            Id = 39,
                            Number = 39
                        },
                        new
                        {
                            Id = 40,
                            Number = 40
                        },
                        new
                        {
                            Id = 41,
                            Number = 41
                        },
                        new
                        {
                            Id = 42,
                            Number = 42
                        },
                        new
                        {
                            Id = 43,
                            Number = 43
                        },
                        new
                        {
                            Id = 44,
                            Number = 44
                        },
                        new
                        {
                            Id = 45,
                            Number = 45
                        },
                        new
                        {
                            Id = 46,
                            Number = 46
                        },
                        new
                        {
                            Id = 47,
                            Number = 47
                        },
                        new
                        {
                            Id = 48,
                            Number = 48
                        },
                        new
                        {
                            Id = 49,
                            Number = 49
                        },
                        new
                        {
                            Id = 50,
                            Number = 50
                        },
                        new
                        {
                            Id = 51,
                            Number = 51
                        },
                        new
                        {
                            Id = 52,
                            Number = 52
                        },
                        new
                        {
                            Id = 53,
                            Number = 53
                        },
                        new
                        {
                            Id = 54,
                            Number = 54
                        },
                        new
                        {
                            Id = 55,
                            Number = 55
                        },
                        new
                        {
                            Id = 56,
                            Number = 56
                        },
                        new
                        {
                            Id = 57,
                            Number = 57
                        },
                        new
                        {
                            Id = 58,
                            Number = 58
                        },
                        new
                        {
                            Id = 59,
                            Number = 59
                        },
                        new
                        {
                            Id = 60,
                            Number = 60
                        },
                        new
                        {
                            Id = 61,
                            Number = 61
                        },
                        new
                        {
                            Id = 62,
                            Number = 62
                        },
                        new
                        {
                            Id = 63,
                            Number = 63
                        },
                        new
                        {
                            Id = 64,
                            Number = 64
                        },
                        new
                        {
                            Id = 65,
                            Number = 65
                        },
                        new
                        {
                            Id = 66,
                            Number = 66
                        },
                        new
                        {
                            Id = 67,
                            Number = 67
                        },
                        new
                        {
                            Id = 68,
                            Number = 68
                        },
                        new
                        {
                            Id = 69,
                            Number = 69
                        },
                        new
                        {
                            Id = 70,
                            Number = 70
                        },
                        new
                        {
                            Id = 71,
                            Number = 71
                        },
                        new
                        {
                            Id = 72,
                            Number = 72
                        },
                        new
                        {
                            Id = 73,
                            Number = 73
                        },
                        new
                        {
                            Id = 74,
                            Number = 74
                        },
                        new
                        {
                            Id = 75,
                            Number = 75
                        },
                        new
                        {
                            Id = 76,
                            Number = 76
                        },
                        new
                        {
                            Id = 77,
                            Number = 77
                        },
                        new
                        {
                            Id = 78,
                            Number = 78
                        },
                        new
                        {
                            Id = 79,
                            Number = 79
                        },
                        new
                        {
                            Id = 80,
                            Number = 80
                        },
                        new
                        {
                            Id = 81,
                            Number = 81
                        },
                        new
                        {
                            Id = 82,
                            Number = 82
                        },
                        new
                        {
                            Id = 83,
                            Number = 83
                        },
                        new
                        {
                            Id = 84,
                            Number = 84
                        },
                        new
                        {
                            Id = 85,
                            Number = 85
                        },
                        new
                        {
                            Id = 86,
                            Number = 86
                        },
                        new
                        {
                            Id = 87,
                            Number = 87
                        },
                        new
                        {
                            Id = 88,
                            Number = 88
                        },
                        new
                        {
                            Id = 89,
                            Number = 89
                        },
                        new
                        {
                            Id = 90,
                            Number = 90
                        },
                        new
                        {
                            Id = 91,
                            Number = 91
                        },
                        new
                        {
                            Id = 92,
                            Number = 92
                        },
                        new
                        {
                            Id = 93,
                            Number = 93
                        },
                        new
                        {
                            Id = 94,
                            Number = 94
                        },
                        new
                        {
                            Id = 95,
                            Number = 95
                        },
                        new
                        {
                            Id = 96,
                            Number = 96
                        },
                        new
                        {
                            Id = 97,
                            Number = 97
                        },
                        new
                        {
                            Id = 98,
                            Number = 98
                        },
                        new
                        {
                            Id = 99,
                            Number = 99
                        },
                        new
                        {
                            Id = 100,
                            Number = 100
                        });
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Divisor")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuizId", "Divisor")
                        .IsUnique();

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Attempt", b =>
                {
                    b.HasOne("NewFizzBuzz.Api.Models.Quiz", "Quiz")
                        .WithMany("Attempts")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.AttemptAnswer", b =>
                {
                    b.HasOne("Attempt", "Attempt")
                        .WithMany("AttemptAnswers")
                        .HasForeignKey("AttemptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewFizzBuzz.Api.Models.QuizQuestion", "QuizQuestion")
                        .WithMany()
                        .HasForeignKey("QuizQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attempt");

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.Quiz", b =>
                {
                    b.HasOne("NewFizzBuzz.Api.Models.User", "Author")
                        .WithMany("Quizzes")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.Rule", b =>
                {
                    b.HasOne("NewFizzBuzz.Api.Models.Quiz", "Quiz")
                        .WithMany("Rules")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Attempt", b =>
                {
                    b.Navigation("AttemptAnswers");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.Quiz", b =>
                {
                    b.Navigation("Attempts");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("NewFizzBuzz.Api.Models.User", b =>
                {
                    b.Navigation("Quizzes");
                });
#pragma warning restore 612, 618
        }
    }
}
